#!/bin/bash

# postrm script for almidon
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


#if [ "$1" = "remove" ]; then
#fi

if [ "$1" = "purge" ]; then 
  
  array_dbservername_availables=(mysql postgresql)
  count_dbservername_available=0
  total_dbservername_availables=${#array_dbservername_availables[*]}

  array_drv_dbservername_availables=(mysql pgsql)
  count_drv_dbservername_available=0
  total_drv_dbservername_availables=${#array_drv_dbservername_availables[*]}  

  array_dbservername_installeds=()
  count_dbservername_installeds=0  
  total_dbservername_installeds=0
  
  array_drv_dbservername_installeds=()
  count_drv_dbservername_installeds=0  
  total_drv_dbservername_installeds=0  
 
  if [ $total_dbservername_availables -gt "0" ];then #Inicio del 1º if

  # $count_dbservername_available es menor que $total_dbservername_availables
  while [ $count_dbservername_available -lt $total_dbservername_availables ]; do #Inicio del 1º While
    dbservername=${array_dbservername_availables[$count_dbservername_available]} 
    drv_dbservername=${array_drv_dbservername_availables[$count_dbservername_available]}       
    if [ -d "/etc/dbservername" ];then   #Inicio del 2º if
      array_dbservername_installeds=( ${array_dbservername_installeds[@]} $dbservername )   
      array_drv_dbservername_installeds=( ${array_drv_dbservername_installeds[@]} $drv_dbservername )      
      count_dbservername_installeds=`expr $count_dbservername_not_installeds + 1`;
    fi   #Fin del 2º if
   count_dbservername_available=`expr $count_dbservername_available + 1`;
  done  #Fin del 1º While  

  total_dbservername_installeds=${#array_dbservername_installeds[*]} 
  if [ $total_dbservername_installeds -gt "0" ];then  #Inicio del 3º if
   echo "";
   echo "Los Drivers de los Servidores de Base de Datos instalados son:";

   total_drv_dbserver_installeds=${#array_drv_dbserver_installeds[*]};                
   while [ $count_drv_dbserver_installeds -lt $total_drv_dbserver_installeds ];do #Inicio del 2º while
    echo " Driver ${array_drv_dbserver_installeds[$count_drv_dbserver_installeds]} de Servidor de Base de Datos ${array_dbserver_installeds[$count_drv_dbserver_installeds]}";
    count_drv_dbserver_installeds=`expr $count_drv_dbserver_installeds + 1`;
   done #Fin del 2º while

   echo "No olvide desinstalar el paquete del driver del Servidor de Base de Datos, antes de desinstalar el Servidor de Base de Datos";
   echo "";
   echo "Para desinstalar el paquete del driver del Servidor de Base de Datos, escriba como root en la línea de comandos: pear uninstall nombre_del_driver_del_Servidor_de_Base_de_Datos.";

   echo "";
   echo "Los Servidores de Base de Datos aún instalados son: ${array_dbservername_installeds[@]}";
   echo "No olvide detener el Servidor de Base de Datos antes de desinstalarlo, escribiendo como root en la línea de comandos: /etc/init.d/nombre_del_Servidor_de_Base_de_Datos stop.";
   
   echo "";
   echo "Para desinstalar el paquete del Servidor de Base de Datos, escriba como root en la línea de comandos: apt-get remove nombre_del_Servidor_de_Base_de_Datos.";
  fi  #Fin del 3º if
 fi #Fin del 1º if  

    uninstall_html_ajax=""
    while [ -z $uninstall_html_ajax ] || [ $uninstall_html_ajax != "S" ] || [ $uninstall_html_ajax != "N" ];do #Inicio del 3º while
     echo -n "¿Desea desinstalar el soporte PHP y bibliotecas de JavaScript para la realización de AJAX?[S/N] ?";
     read uninstall_html_ajax
     if [ $uninstall_html_ajax = "S" ] || [ $uninstall_html_ajax = "N" ];then  #Inicio del 4º if
      break;
     else
       echo "El valor de la opción ingresada es inválido";
       echo "Vuelvalo a intentar";
     fi  #Fin del 4º if
    done  #Fin del 3º while

    echo "";
    if [ $uninstall_html_ajax = "S" ];then #Inicio del 5º if
     echo "Desinstalando soporte PHP y bibliotecas de JavaScript para la realización de AJAX";
     pear uninstall HTML_AJAX-alpha;
    else
         if [ $uninstall_html_ajax = "N" ];then  #Inicio del 6º if
          echo "Conservando soporte PHP y bibliotecas de JavaScript para la realización de AJAX";
         fi #Fin del 6º if
    fi  #Fin del 5º if

    uninstall_mdb2=""
    while [ -z $uninstall_mdb2 ] || [ $uninstall_mdb2 != "S" ] || [ $uninstall_mdb2 != "N" ];do #Inicio del 3º while
     echo -n "¿Desea desinstalar paquete PHP PEAR MDB2[S/N] ?";
     read uninstall_mdb2
     if [ $uninstall_mdb2 = "S" ] || [ $uninstall_mdb2 = "N" ];then  #Inicio del 4º if
      break;
     else
       echo "El valor de la opción ingresada es inválido";
       echo "Vuelvalo a intentar";
     fi  #Fin del 4º if
    done  #Fin del 3º while

    echo "";
    if [ $uninstall_mdb2 = "S" ];then #Inicio del 5º if
     echo "Desinstalando paquete PHP PEAR MDB2";
     pear uninstall mdb2;
    else
         if [ $uninstall_mdb2 = "N" ];then  #Inicio del 6º if
          echo "Conservando paquete PHP PEAR MDB2";
         fi #Fin del 6º if
    fi  #Fin del 5º if    
  
   echo "";
   echo "Reiniciando Servidor Apache";
   if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then  #Inicio del 7º if
		invoke-rc.d apache2 restart || true
   else
		/etc/init.d/apache2 restart || true
   fi  #Fin del 7º if 
fi 

# if [ "$1" = "upgrade" ];then
    
# fi

# if [ "$1" = "failed-upgrade" ];then
    
# fi

# if [ "$1" = "abort-install" ];then

# fi
    
# if [ "$1" = "abort-upgrade" ];then

# fi
    
# if [ "$1" = "disappear" ];then
    
# fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
